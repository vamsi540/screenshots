1.
dessertshop code

package bhargav;

import java.util.Scanner;

public class Dessertshop {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		System.out.print("Are you a user or owner: ");
		String str = input.nextLine();
		str = str.toUpperCase();
		if(str.matches("OWNER")) {
			System.out.println("Please add an iteam: ");
			String str1 = input.next();
			str1 = str1.toUpperCase();
			switch(str1)
			{
			case "CANDY":
				Dessertitem c = new Candy();
				c.insert();
				break;
			case "COOKIE":
				Dessertitem c1 = new Cookie();
				c1.insert();
				break;
			case "IceCream":
				Dessertitem i = new IceCream();
				i.insert();
				
			}
				
		}
		else if(str.matches("USER")) {
			System.out.print("Please place your order: ");
			String name = input.nextLine();
			name = name.toUpperCase();
			switch(name)
			{
			case "CANDY":
				Dessertitem d = new Candy();
				System.out.print("Place the quantity of candy: ");
				int n = input.nextInt();
				System.out.print("This is your bill amount in rupees: "+d.getCost(n));
				break;
			case "COOKIE":
				Dessertitem e = new Cookie();
				System.out.print("Place the quantity of cookie: ");
				int m = input.nextInt();
				System.out.print("This is your bill amount in rupees: "+e.getCost(m));
				break;
			case "IceCream":
				Dessertitem f = new IceCream();
				System.out.print("Place the quantity of Icecream: ");
				int o = input.nextInt();
				System.out.print("This is your bill amount in rupees: "+f.getCost(o));
				break;
			}
		}
		
	}

}
abstract class Dessertitem{
	public abstract void insert();
	public abstract double getCost(int x);
}
class Candy extends Dessertitem{
	
	public double getCost(int x) {
		// TODO Auto-generated method stub
		double i = x*60;
		return i;
	}

	@Override
	public void insert() {
		System.out.println("Thank you for inserting candy");
	}
}
class Cookie extends Dessertitem{
	public double getCost(int x) {
		double i = x*70;
		return i;
	}

	@Override
	public void insert() {
		System.out.println("Thank you for adding cookie");
	}
}
class IceCream extends Dessertitem{
	public double getCost(int x) {
		return x;
	}

	@Override
	public void insert() {
		System.out.println("Thank you for adding IceCream");
	}
}




2.hierarchy code:

package bhargav;
import java.util.Scanner;
class Employee{
	Scanner sc=new Scanner(System.in);
	int i=20000;
	public void details() {
		System.out.println("Salary of employee:"+i);
	}
}
class Manager extends Employee{
	Scanner sc=new Scanner(System.in);
	public void details() {
		System.out.print("Enter incentives:");
		int m=sc.nextInt();
		System.out.println("Total salary of Manager"+(super.i+m));
	}
}
class Labour extends Employee{
	Scanner sc=new Scanner(System.in);
	public void details() {
		System.out.print("Enter extra time labour in month:");
		int m=sc.nextInt();
		int x=super.i/12;
		int y=x*m;
		System.out.println("Total salary of labour"+(super.i+y));
	}
}
public class Hierarchy {

	public static void main(String[] args) {
		Employee e=new Employee();
		e.details();
		Manager m=new Manager();
		m.details();
		Labour l=new Labour();
		l.details();

	}

}


3.persist code


package bhargav;

import java.util.Scanner;

public class Persist {
	public static void main(String[] args) {
		Persistence p = new DatabasePersistence();
		p.persist();
		
	}

}
abstract class Persistence{
	abstract void persist();
}
class FilePersistence extends Persistence{
	Scanner input = new Scanner(System.in);
	int i;
	void persist() {
		i = input.nextInt();
		
	}
}
class DatabasePersistence extends Persistence{
	Scanner input = new Scanner(System.in);
	int j;
	void persist() {
		j = input.nextInt();
		System.out.println("Persist invoked.");
	}
}



4.shape code


package bhargav;

public class Shape {
	public static void main(String[] args) {
		Shapes r = new Rectangle();
		r.draw();
	}

}
// creating an abstract class
abstract class Shapes{
	abstract void draw();
}
// every subclass should inherit the abstract method of parent class
class Rectangle extends Shapes{
	void draw() {
		System.out.println("Rectangle");
	}
}
class Line extends Shapes{
	void draw() {
		System.out.println("Line");
	}
}
class Cube extends Shapes{
	void draw() {
		System.out.println("Cube");
		
	}
}


5.singleton code:

package bhargav;
class Person{
	private void eat()
	{
		System.out.println("person eats");
	}
}
class Dog extends Person
{
	public void bark()
	{
		System.out.println("Dogs barks");
	}
}
public class Singletone {

	public static void main(String[] args) {
		Dog d1=new Dog();
		d1.bark();
		//d1.eat();

	}

}

